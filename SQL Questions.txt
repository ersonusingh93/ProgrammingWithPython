SQL Questions : 
CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '21-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '21-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '21-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '21-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '21-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '21-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '21-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '21-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '23-02-20'),
		(002, 3000, '23-06-11'),
		(003, 4000, '23-02-20'),
		(001, 4500, '23-02-20'),
		(002, 3500, '23-06-11');
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2023-02-20 00:00:00'),
 (002, 'Executive', '2023-06-11 00:00:00'),
 (008, 'Executive', '2023-06-11 00:00:00'),
 (005, 'Manager', '2023-06-11 00:00:00'),
 (004, 'Asst. Manager', '2023-06-11 00:00:00'),
 (007, 'Executive', '2023-06-11 00:00:00'),
 (006, 'Lead', '2023-06-11 00:00:00'),
 (003, 'Lead', '2023-06-11 00:00:00');

Sql Questions : 
Q-1. Write an SQL query to fetch “FIRST_NAME” from the Worker table using the alias name <WORKER_NAME>.
Q-2. Write an SQL query to fetch “FIRST_NAME” from the Worker table in upper case.
Q-3. Write an SQL query to fetch unique values of DEPARTMENT from the Worker table.
Q-4. Write an SQL query to print the first three characters of  FIRST_NAME from the Worker table.
Q-5. Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from the Worker table.
Q-6. Write an SQL query to print the FIRST_NAME from the Worker table after removing white spaces from the right side.
Q-7. Write an SQL query to print the DEPARTMENT from the Worker table after removing white spaces from the left side.
Q-8. Write an SQL query that fetches the unique values of DEPARTMENT from the Worker table and prints its length.
Q-9. Write an SQL query to print the FIRST_NAME from the Worker table after replacing ‘a’ with ‘A’.
Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME from the Worker table into a single column COMPLETE_NAME. A space char should separate them.
Q-11. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.
Q-12. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
Q-13. Write an SQL query to print details for Workers with the first names “Vipul” and “Satish” from the Worker table.
Q-14. Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from the Worker table.
Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin”.
Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.
Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.
Q-20. Write an SQL query to print details of the Workers who joined in Feb 2021.
Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.
Q-22. Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000.
Q-23. Write an SQL query to fetch the number of workers for each department in descending order.
Q-24. Write an SQL query to print details of the Workers who are also Managers.
Q-25. Write an SQL query to fetch duplicate records having matching data in some fields of a table.
Q-26. Write an SQL query to show only odd rows from a table.
Q-27. Write an SQL query to show only even rows from a table.
Q-28. Write an SQL query to clone a new table from another table.
Q-29. Write an SQL query to fetch intersecting records of two tables.
Q-30. Write an SQL query to show records from one table that another table does not have.
Q-31. Write an SQL query to show the current date and time.
Q-32. Write an SQL query to show the top n (say 10) records of a table.
Q-33. Write an SQL query to determine the nth (say n=5) highest salary from a table.
Q-34. Write an SQL query to determine the 5th highest salary without using the TOP or limit method.
Q-35. Write an SQL query to fetch the list of employees with the same salary.
Q-36. Write an SQL query to show the second-highest salary from a table.
Q-37. Write an SQL query to show one row twice in the results from a table.
Q-38. Write an SQL query to fetch intersecting records of two tables.
Q-39. Write an SQL query to fetch the first 50% of records from a table.
Q-40. Write an SQL query to fetch the departments that have less than five people in them.
Q-41. Write an SQL query to show all departments along with the number of people in there.
Q-42. Write an SQL query to show the last record from a table.
Q-43. Write an SQL query to fetch the first row of a table.
Q-44. Write an SQL query to fetch the last five records from a table.
Q-45. Write an SQL query to print the names of employees having the highest salary in each department.
Q-46. Write an SQL query to fetch three max salaries from a table.
Q-47. Write an SQL query to fetch three min salaries from a table.
Q-48. Write an SQL query to fetch nth max salaries from a table.
Q-49. Write an SQL query to fetch departments along with the total salaries paid for each of them.
Q-50. Write an SQL query to fetch the names of workers who earn the highest salary.



ASCII	Returns the ASCII value for the specific character
CHAR_LENGTH	Returns the length of a string (in characters)
CHARACTER_LENGTH	Returns the length of a string (in characters)
CONCAT	Adds two or more expressions together
CONCAT_WS	Adds two or more expressions together with a separator
FIELD	Returns the index position of a value in a list of values
FIND_IN_SET	Returns the position of a string within a list of strings
FORMAT	Formats a number to a format like "#,###,###.##", rounded to a specified number of decimal places
INSERT	Inserts a string within a string at the specified position and for a certain number of characters
INSTR	Returns the position of the first occurrence of a string in another string
LCASE	Converts a string to lower-case
LEFT	Extracts a number of characters from a string (starting from left)
LENGTH	Returns the length of a string (in bytes)
LOCATE	Returns the position of the first occurrence of a substring in a string
LOWER	Converts a string to lower-case
LPAD	Left-pads a string with another string, to a certain length
LTRIM	Removes leading spaces from a string
MID	Extracts a substring from a string (starting at any position)
POSITION	Returns the position of the first occurrence of a substring in a string
REPEAT	Repeats a string as many times as specified
REPLACE	Replaces all occurrences of a substring within a string, with a new substring
REVERSE	Reverses a string and returns the result
RIGHT	Extracts a number of characters from a string (starting from right)
RPAD	Right-pads a string with another string, to a certain length
RTRIM	Removes trailing spaces from a string
SPACE	Returns a string of the specified number of space characters
STRCMP	Compares two strings
SUBSTR	Extracts a substring from a string (starting at any position)
SUBSTRING	Extracts a substring from a string (starting at any position)
SUBSTRING_INDEX	Returns a substring of a string before a specified number of delimiter occurs
TRIM	Removes leading and trailing spaces from a string
UCASE	Converts a string to upper-case
UPPER	Converts a string to upper-case